'''
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
'''

# =======================================================
# Settings for all apps (API keys, Django configurations, logging, Email, etc)
# Sections:
#
# - BASE CONFIGURATION
# - LOGGING CONFIGURATION
# - INTERNATIONALIZATION
# - STATIC FILES CONFIGURATION
# - DATABASE CONFIGURATION
# - TEMPLATES CONFIGURATION
# - APPLICATION DEFINITION
# - MIDDLEWARE CONFIGURATION
# - SWAGGER CONFIGURATION
# - CORS CONFIGURATION
# - REST CONFIGURATION
# =======================================================

import sys
from os import environ, getenv
from pathlib import Path

from django.core.management.utils import get_random_secret_key

# =======================================================
# BASE CONFIGURATION
# =======================================================

BASE_DIR = Path(__file__).resolve().parent.parent
ROOT_URLCONF = 'app.urls'
WSGI_APPLICATION = 'app.wsgi.application'
SECRET_KEY = environ.get('DJANGO_SECRET_KEY', get_random_secret_key())

ALLOWED_HOSTS = ['localhost', 'app']
api_host = getenv('API_HOST')
if api_host:
    ALLOWED_HOSTS.extend([d.strip() for d in api_host.split(';') if d.strip()])

# =======================================================
# LOGGING CONFIGURATION
# =======================================================

LOG_LEVEL = getenv('LOG_LEVEL', 'DEBUG')
DEBUG = LOG_LEVEL == 'DEBUG'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'custom': {
            'format': '%(asctime)s | %(levelname)s | %(name)s (%(module)s) | %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'custom',
            'stream': sys.stdout,
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'app': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
            'propagate': False,
        },
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =======================================================
# INTERNATIONALIZATION
# =======================================================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# =======================================================
# STATIC FILES CONFIGURATION
# =======================================================

STATIC_URL = 'static/'

# =======================================================
# DATABASE CONFIGURATION
# =======================================================

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': getenv('POSTGRES_DB', 'app_db'),
        'USER': getenv('POSTGRES_USER', 'app_user'),
        'PASSWORD': getenv('POSTGRES_PASSWORD', 'pass'),
        'HOST': getenv('POSTGRES_HOST', 'localhost'),
        'PORT': getenv('POSTGRES_PORT', '5432'),
    }
}

# =======================================================
# TEMPLATES CONFIGURATION
# =======================================================

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# =======================================================
# APPLICATION DEFINITION
# =======================================================

INSTALLED_APPS = [
    'app',
    'lead',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'drf_spectacular',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders'
]

# =======================================================
# MIDDLEWARE CONFIGURATION
# =======================================================

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# =======================================================
# SWAGGER CONFIGURATION
# =======================================================

SPECTACULAR_SETTINGS = {
    'TITLE': 'App API',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': True
}

# =======================================================
# CORS CONFIGURATION
# =======================================================

CORS_ALLOW_ALL_ORIGINS = True  # TODO
CORS_EXPOSE_HEADERS = [
    'Content-Disposition'
]

# =======================================================
# AUTHENTICATION AND AUTHORIZATION
# =======================================================

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# =======================================================
# REST CONFIGURATION
# =======================================================

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}
